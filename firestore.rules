rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isDoctor() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'doctor';
    }
    
    function isPatient() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'patient';
    }
    
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if isOwner(userId) || isAdmin();
    }

    // Patients collection
    match /patients/{patientId} {
      allow read: if isSignedIn();
      allow create: if isAdmin() || (isPatient() && isOwner(patientId));
      allow update: if isAdmin() || isDoctor() || (isPatient() && isOwner(patientId));
      allow delete: if isAdmin();
    }

    // Doctors collection
    match /doctors/{doctorId} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }

    // Appointments collection
    match /appointments/{appointmentId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if isAdmin() || isDoctor() || (isPatient() && resource.data.patientId == request.auth.uid);
      allow delete: if isAdmin() || (isPatient() && resource.data.patientId == request.auth.uid);
    }

    // Medical records collection
    match /medicalRecords/{recordId} {
      allow read: if isAdmin() || isDoctor() || (isPatient() && resource.data.patientId == request.auth.uid);
      allow create: if isAdmin() || isDoctor();
      allow update: if isAdmin() || isDoctor();
      allow delete: if isAdmin();
    }

    // Visits collection
    match /visits/{visitId} {
      allow read: if isAdmin() || isDoctor() || (isPatient() && resource.data.patientId == request.auth.uid);
      allow create: if isAdmin() || isDoctor();
      allow update: if isAdmin() || isDoctor();
      allow delete: if isAdmin();
    }

    match /clinicRequests/{requestId} {
      allow read, write: if request.auth != null;
    }

  }
}